 
 <?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class AcademicYear extends Model
{
    protected $fillable = ['name'];

     public function students()
    {
        return $this->hasMany(Student::class);
    }
}
 
 <?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class College extends Model
{
    protected $fillable = ['name', 'HOD_name'];

    public function departments()
    {
        return $this->hasMany(Department::class);
    }
}

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Course extends Model
{
    protected $fillable = ['name', 'program_id'];

    public function program()
    {
        return $this->belongsTo(Program::class);
    }

    public function instructors()
    {
        return $this->hasMany(Instructor::class);
    }

     public function students()
    {
        return $this->hasMany(Student::class);
    }

    public function courseEvaluations()
    {
        return $this->hasMany(CourseEvaluation::class);
    }
}

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Instructor extends Model
{
    protected $fillable = ['name', 'department_id', 'course_id'];

    public function department()
    {
        return $this->belongsTo(Department::class);
    }

    public function course()
    {
        return $this->belongsTo(Course::class);
    }
}


 
 <?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Program extends Model
{
    protected $fillable = ['name', 'department_id'];

    public function department()
    {
        return $this->belongsTo(Department::class);
    }

    public function courses()
    {
        return $this->hasMany(Course::class);
    }

     public function students()
    {
        return $this->hasMany(Student::class);
    }
}
 
 public function up()
    {
        Schema::create('course_evaluations', function (Blueprint $table) {
            $table->id();
            $table->foreignId('student_id')->constrained('students');
            $table->string('token_number');
            $table->foreignId('course_id')->constrained('courses');
            $table->enum('teaching_modality', ['Good', 'Better', 'Best']);
            $table->enum('learning_materials', ['Available', 'Not Available', 'Complex to Understand']);
            $table->enum('lecture_time_start', ['Early Start', 'Coming Late']);
            $table->enum('lecture_time_end', ['Early End', 'Ending Late']);
            $table->enum('lecturer_punctuality', ['Always On Time', 'Sometimes Late', 'Always Late']);
            $table->enum('content_understanding', ['Very Clear', 'Average', 'Confusing']);
            $table->enum('student_engagement', ['Highly Interactive', 'Moderate', 'Not Interactive']);
            $table->enum('use_of_technology', ['Effective', 'Moderate', 'Not Used']);
            $table->enum('assessment_feedback', ['Timely & Helpful', 'Late Feedback', 'No Feedback']);
            $table->enum('course_relevance', ['Very Relevant', 'Somewhat Relevant', 'Not Relevant']);
            $table->enum('overall_satisfaction', ['Very Satisfied', 'Satisfied', 'Not Satisfied']);
            $table->text('suggestions')->nullable();
            $table->timestamps();
        });
    }
	
	
	<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class CourseEvaluation extends Model
{
    protected $fillable = [
        'student_id',
        'token_number',
        'course_id',
        'teaching_modality',
        'learning_materials',
        'lecture_time_start',
        'lecture_time_end',
        'lecturer_punctuality',
        'content_understanding',
        'student_engagement',
        'use_of_technology',
        'assessment_feedback',
        'course_relevance',
        'overall_satisfaction',
        'suggestions'
    ];

    public function student()
    {
        return $this->belongsTo(Student::class);
    }

     public function course()
    {
        return $this->belongsTo(Course::class);
    }
}







<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class CourseEvaluation extends Model
{
    protected $fillable = [
        'student_id',
        'token_number',
        'course_id',
        'teaching_modality',
        'learning_materials',
        'lecture_time_start',
        'lecture_time_end',
        'lecturer_punctuality',
        'content_understanding',
        'student_engagement',
        'use_of_technology',
        'assessment_feedback',
        'course_relevance',
        'overall_satisfaction',
        'suggestions'
    ];

    public function student()
    {
        return $this->belongsTo(Student::class);
    }

     public function course()
    {
        return $this->belongsTo(Course::class);
    }
}





here create only  index  

to do analytics

create a cross tab table with bootstrap

by department, program, course, AcademicYear, College

a root is College->department->program->AcademicYear->course 



onyesha hizi in terms of frequency

           ('teaching_modality', ['Good', 'Better', 'Best']);
            $table->enum('learning_materials', ['Available', 'Not Available', 'Complex to Understand']);
            $table->enum('lecture_time_start', ['Early Start', 'Coming Late']);
            $table->enum('lecture_time_end', ['Early End', 'Ending Late']);
            $table->enum('lecturer_punctuality', ['Always On Time', 'Sometimes Late', 'Always Late']);
            $table->enum('content_understanding', ['Very Clear', 'Average', 'Confusing']);
            $table->enum('student_engagement', ['Highly Interactive', 'Moderate', 'Not Interactive']);
            $table->enum('use_of_technology', ['Effective', 'Moderate', 'Not Used']);
            $table->enum('assessment_feedback', ['Timely & Helpful', 'Late Feedback', 'No Feedback']);
            $table->enum('course_relevance', ['Very Relevant', 'Somewhat Relevant', 'Not Relevant']);
            $table->enum('overall_satisfaction', ['Very Satisfied', 'Satisfied', 'Not Satisfied']);